Exception Handling:-

Errors: A programming mistake is said to be an error.

There are three types of errors:
1) Compile time errors (Syntax errors)
2) Runtime errors (Exceptions)
3) Logical errors

Exception means run time error.

In exception handling we use the following keywords.
1) try 2) catch 3) throw 4) throws 5) finally


The syntax of try and catch blocks:
            try
            {
            ============= => Task code
            }catch(ExceptionClassName ObjectReference)
            {
            ============= => Error Message
            }

try block must be associated with at least one catch block or finally block.

All exceptions are classes in Java.

Whenever exception occurs in a Java program, then the related exception class
object is created by JVM, passed to exception handler (catch block) and exception
handler code is executed.


There are two types of exceptions:
1) Checked Exceptions
2) Unchecked Exceptions

Checked Exceptions:
            The exception classes that are derived from java.lang.Exception class are called checked exceptions.
            Checked exceptions do not include java.lang.RuntimeException class and all its sub classes.
            All checked exceptions must be handled explicitly otherwise compile time error occurs.
            The Java compiler checks for try & catch blocks or throws clause for this kind of exceptions.
            All application specific exceptions are comes under this category.

Unchecked Exceptions:
            The exception classes that are derived from java.lang.RuntimeException class are called unchecked exceptions.
            All unchecked exceptions are handled by system implicitly.
            Handling unchecked exceptions are optional by programmer.
            Unchecked exceptions are handled by programmer to display user friendly error messages only.
            The Java compiler does not check for try & catch blocks or throws clause for this kind of exceptions.
            All general exceptions comes under this category.